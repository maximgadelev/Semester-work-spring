buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE")
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.liquibase.gradle' version '2.0.4'
}

group = 'com.itis.gadelev'
version = '0.0.1-SNAPSHOT'
jar {
    baseName = 'base-name'
    version = '0.1.0'
    manifest {
        attributes (
                'Main-Class': 'com/gadelev/Application'
        )
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-mail:${springBootVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-parent:2.6.7'
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
    implementation 'org.thymeleaf:thymeleaf-spring5:3.0.15.RELEASE'
    implementation 'org.springframework.security:spring-security-taglibs:5.6.3'
    implementation 'org.springframework.webflow:spring-faces:2.5.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker:2.6.3'
    implementation 'com.cloudinary:cloudinary-http44:1.32.0'
    implementation 'org.liquibase:liquibase-core:4.9.1'
    liquibaseRuntime('org.liquibase:liquibase-core:4.9.0')
    liquibaseRuntime('org.postgresql:postgresql:42.3.3')
    testImplementation "com.h2database:h2:1.4.200"

}
def props = new Properties()
file("src/main/resources/liquibase.properties").withInputStream { props.load(it) }

liquibase {
    activities {
        main {
            changeLogFile props.getProperty("changeLogFile")
            url props.getProperty("url")
            username props.getProperty("username")
            password props.getProperty("password")
            driver props.getProperty("driver")
        }
    }
}
task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

clean {
    project.file('app.jar').delete()
}

